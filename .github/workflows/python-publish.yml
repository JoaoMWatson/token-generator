# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
  
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.0
  
    - name: Install poetry
      run: |
        python -m pip install poetry
  
    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true
  
    - name: Cache the virtualenv
      uses: actions/cache@v2
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
  
    - name: Install dependencies
      run: |
        python -m poetry install
  
    - name: Run tests
      run: |
        python -m poetry run python -m pytest -sxv
